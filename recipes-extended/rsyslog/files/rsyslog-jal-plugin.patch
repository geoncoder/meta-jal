--- a/Makefile.am
+++ b/Makefile.am
@@ -155,6 +155,10 @@ if ENABLE_OMHDFS
 SUBDIRS += plugins/omhdfs
 endif
 
+if ENABLE_OMJAL
+SUBDIRS += plugins/omjal
+endif
+
 if ENABLE_OMJOURNAL
 SUBDIRS += plugins/omjournal
 endif
@@ -299,6 +303,7 @@ THIS_IS_TEMPORARILY_DISABLED = \
 	--enable-pmsnare \
 	--enable-elasticsearch \
 	--enable-valgrind \
+	--enable-omjal \
 	--with-systemdsystemunitdir=$$dc_install_base/$(systemdsystemunitdir) 
 # temporarily disable these checks for make distcheck 2012-09-06 rgerhards
 #				--enable-mmsnmptrapd \
--- a/Makefile.in
+++ b/Makefile.in
@@ -120,42 +120,38 @@ sbin_PROGRAMS =
 @ENABLE_IMCZMQ_TRUE@am__append_27 = contrib/imczmq
 @ENABLE_OMUXSOCK_TRUE@am__append_28 = plugins/omuxsock
 @ENABLE_OMHDFS_TRUE@am__append_29 = plugins/omhdfs
-@ENABLE_OMJOURNAL_TRUE@am__append_30 = plugins/omjournal
-@ENABLE_IMJOURNAL_TRUE@am__append_31 = plugins/imjournal
-@ENABLE_ELASTICSEARCH_TRUE@am__append_32 = plugins/omelasticsearch
-@ENABLE_MMSNMPTRAPD_TRUE@am__append_33 = plugins/mmsnmptrapd
-@ENABLE_IMFILE_TRUE@am__append_34 = plugins/imfile
-@ENABLE_IMPTCP_TRUE@am__append_35 = plugins/imptcp
-@ENABLE_IMDIAG_TRUE@am__append_36 = plugins/imdiag
-@ENABLE_MAIL_TRUE@am__append_37 = plugins/ommail
-@ENABLE_OMKAFKA_TRUE@am__append_38 = plugins/omkafka
-@ENABLE_OMPROG_TRUE@am__append_39 = plugins/omprog
-@ENABLE_RFC3195_TRUE@am__append_40 = plugins/im3195
-@ENABLE_MMNORMALIZE_TRUE@am__append_41 = plugins/mmnormalize
-@ENABLE_MMJSONPARSE_TRUE@am__append_42 = plugins/mmjsonparse
-@ENABLE_MMGROK_TRUE@am__append_43 = contrib/mmgrok
-@ENABLE_MMAUDIT_TRUE@am__append_44 = plugins/mmaudit
-@ENABLE_MMANON_TRUE@am__append_45 = plugins/mmanon
-@ENABLE_MMUTF8FIX_TRUE@am__append_46 = plugins/mmutf8fix
-@ENABLE_MMCOUNT_TRUE@am__append_47 = contrib/mmcount
-@ENABLE_MMSEQUENCE_TRUE@am__append_48 = contrib/mmsequence
-@ENABLE_MMFIELDS_TRUE@am__append_49 = plugins/mmfields
-@ENABLE_MMPSTRUCDATA_TRUE@am__append_50 = plugins/mmpstrucdata
-@ENABLE_MMRFC5424ADDHMAC_TRUE@am__append_51 = contrib/mmrfc5424addhmac
+@ENABLE_OMJAL_TRUE@am__append_30 = plugins/omjal
+@ENABLE_OMJOURNAL_TRUE@am__append_31 = plugins/omjournal
+@ENABLE_IMJOURNAL_TRUE@am__append_32 = plugins/imjournal
+@ENABLE_ELASTICSEARCH_TRUE@am__append_33 = plugins/omelasticsearch
+@ENABLE_MMSNMPTRAPD_TRUE@am__append_34 = plugins/mmsnmptrapd
+@ENABLE_IMFILE_TRUE@am__append_35 = plugins/imfile
+@ENABLE_IMPTCP_TRUE@am__append_36 = plugins/imptcp
+@ENABLE_IMDIAG_TRUE@am__append_37 = plugins/imdiag
+@ENABLE_MAIL_TRUE@am__append_38 = plugins/ommail
+@ENABLE_OMKAFKA_TRUE@am__append_39 = plugins/omkafka
+@ENABLE_OMPROG_TRUE@am__append_40 = plugins/omprog
+@ENABLE_RFC3195_TRUE@am__append_41 = plugins/im3195
+@ENABLE_MMNORMALIZE_TRUE@am__append_42 = plugins/mmnormalize
+@ENABLE_MMJSONPARSE_TRUE@am__append_43 = plugins/mmjsonparse
+@ENABLE_MMGROK_TRUE@am__append_44 = contrib/mmgrok
+@ENABLE_MMAUDIT_TRUE@am__append_45 = plugins/mmaudit
+@ENABLE_MMANON_TRUE@am__append_46 = plugins/mmanon
+@ENABLE_MMUTF8FIX_TRUE@am__append_47 = plugins/mmutf8fix
+@ENABLE_MMCOUNT_TRUE@am__append_48 = contrib/mmcount
+@ENABLE_MMSEQUENCE_TRUE@am__append_49 = contrib/mmsequence
+@ENABLE_MMFIELDS_TRUE@am__append_50 = plugins/mmfields
+@ENABLE_MMPSTRUCDATA_TRUE@am__append_51 = plugins/mmpstrucdata
+@ENABLE_MMRFC5424ADDHMAC_TRUE@am__append_52 = contrib/mmrfc5424addhmac
 
 # omhttpfs
-@ENABLE_OMHTTPFS_TRUE@am__append_52 = contrib/omhttpfs
+@ENABLE_OMHTTPFS_TRUE@am__append_53 = contrib/omhttpfs
 
 # omamqp1
-@ENABLE_OMAMQP1_TRUE@am__append_53 = contrib/omamqp1
+@ENABLE_OMAMQP1_TRUE@am__append_54 = contrib/omamqp1
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_define.m4 \
-	$(top_srcdir)/m4/atomic_operations.m4 \
-	$(top_srcdir)/m4/atomic_operations_64bit.m4 \
-	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
-	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
-	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
+am__aclocal_m4_deps = $(top_srcdir)/configure.ac
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
 DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
@@ -265,7 +261,7 @@ DIST_SUBDIRS = compat runtime grammar .
 	plugins/pmlastmsg plugins/omruleset plugins/omudpspoof \
 	plugins/ommongodb contrib/omhiredis contrib/omzmq3 \
 	contrib/omczmq contrib/omrabbitmq contrib/imzmq3 \
-	contrib/imczmq plugins/omuxsock plugins/omhdfs \
+	contrib/imczmq plugins/omuxsock plugins/omhdfs plugins/omjal \
 	plugins/omjournal plugins/imjournal plugins/omelasticsearch \
 	plugins/mmsnmptrapd plugins/imfile plugins/imptcp \
 	plugins/imdiag plugins/ommail plugins/omkafka plugins/omprog \
@@ -276,8 +272,7 @@ DIST_SUBDIRS = compat runtime grammar .
 	contrib/omhttpfs contrib/omamqp1 tests
 am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in AUTHORS \
 	COPYING COPYING.LESSER ChangeLog INSTALL NEWS README compile \
-	config.guess config.sub depcomp install-sh ltmain.sh missing \
-	ylwrap
+	config.guess config.sub install-sh ltmain.sh missing ylwrap
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 distdir = $(PACKAGE)-$(VERSION)
 top_distdir = $(distdir)
@@ -368,8 +363,6 @@ INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
-JAVA = @JAVA@
-JAVAC = @JAVAC@
 JSON_C_CFLAGS = @JSON_C_CFLAGS@
 JSON_C_LIBS = @JSON_C_LIBS@
 LD = @LD@
@@ -382,7 +375,6 @@ LIBDBI_LIBS = @LIBDBI_LIBS@
 LIBESTR_CFLAGS = @LIBESTR_CFLAGS@
 LIBESTR_LIBS = @LIBESTR_LIBS@
 LIBGCRYPT_CFLAGS = @LIBGCRYPT_CFLAGS@
-LIBGCRYPT_CONFIG = @LIBGCRYPT_CONFIG@
 LIBGCRYPT_LIBS = @LIBGCRYPT_LIBS@
 LIBLOGGING_CFLAGS = @LIBLOGGING_CFLAGS@
 LIBLOGGING_LIBS = @LIBLOGGING_LIBS@
@@ -405,6 +397,7 @@ LIBUUID_LIBS = @LIBUUID_LIBS@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 MAKEINFO = @MAKEINFO@
 MANIFEST_TOOL = @MANIFEST_TOOL@
 MKDIR_P = @MKDIR_P@
@@ -458,12 +451,8 @@ SOL_LIBS = @SOL_LIBS@
 STRIP = @STRIP@
 UDPSPOOF_CFLAGS = @UDPSPOOF_CFLAGS@
 UDPSPOOF_LIBS = @UDPSPOOF_LIBS@
-UUDECODE = @UUDECODE@
 VALGRIND = @VALGRIND@
 VERSION = @VERSION@
-WARN_CFLAGS = @WARN_CFLAGS@
-WARN_LDFLAGS = @WARN_LDFLAGS@
-WARN_SCANNERFLAGS = @WARN_SCANNERFLAGS@
 WGET = @WGET@
 YACC = @YACC@
 YACC_FOUND = @YACC_FOUND@
@@ -575,7 +564,8 @@ SUBDIRS = compat runtime grammar . plugi
 	$(am__append_42) $(am__append_43) $(am__append_44) \
 	$(am__append_45) $(am__append_46) $(am__append_47) \
 	$(am__append_48) $(am__append_49) $(am__append_50) \
-	$(am__append_51) $(am__append_52) $(am__append_53) tests
+	$(am__append_51) $(am__append_52) $(am__append_53) \
+	$(am__append_54) tests
 
 # make sure "make distcheck" tries to build all modules. This means that
 # a developer must always have an environment where every supporting library
@@ -617,6 +607,7 @@ THIS_IS_TEMPORARILY_DISABLED = \
 	--enable-pmsnare \
 	--enable-elasticsearch \
 	--enable-valgrind \
+	--enable-omjal \
 	--with-systemdsystemunitdir=$$dc_install_base/$(systemdsystemunitdir) 
 
 ACLOCAL_AMFLAGS = -I m4
--- a/configure.ac
+++ b/configure.ac
@@ -1465,6 +1465,22 @@ AC_ARG_ENABLE(omuxsock,
 )
 AM_CONDITIONAL(ENABLE_OMUXSOCK, test x$enable_omuxsock = xyes)
 
+# settings for the jal output module
+AC_ARG_ENABLE(omjal,
+        [AS_HELP_STRING([--enable-omjal],[Compiles omjal module @<:@default=no@:>@])],
+        [case "${enableval}" in
+         yes) enable_omjal="yes" ;;
+          no) enable_omjal="no" ;;
+           *) AC_MSG_ERROR(bad value ${enableval} for --enable-omjal) ;;
+         esac],
+        [enable_omjal=no]
+)
+#
+# you may want to do some library checks here - see snmp, mysql, pgsql modules
+# for samples
+#
+AM_CONDITIONAL(ENABLE_OMJAL, test x$enable_omjal = xyes)
+# end of copy template - be sure to search for omtemplate to find everything!
 
 # settings for mmsnmptrapd message modification module
 AC_ARG_ENABLE(mmsnmptrapd,
@@ -1814,6 +1830,7 @@ AC_CONFIG_FILES([Makefile \
 		plugins/omkafka/Makefile \
 		plugins/omprog/Makefile \
 		plugins/mmexternal/Makefile \
+		plugins/omjal/Makefile \
 		plugins/omstdout/Makefile \
 		plugins/omjournal/Makefile \
 		plugins/pmciscoios/Makefile \
@@ -1906,6 +1923,7 @@ echo "    omhdfs module will be compiled
 echo "    omelasticsearch module will be compiled:  $enable_elasticsearch"
 echo "    omruleset module will be compiled:        $enable_omruleset"
 echo "    omudpspoof module will be compiled:       $enable_omudpspoof"
+echo "    output jal module will be compiled:       $enable_omjal"  
 echo "    omuxsock module will be compiled:         $enable_omuxsock"
 echo "    omzmq3 module will be compiled:           $enable_omzmq3"
 echo "    omczmq module will be compiled:           $enable_omczmq"
--- /dev/null
+++ b/plugins/omjal/Makefile.am
@@ -0,0 +1,10 @@
+pkglib_LTLIBRARIES = omjal.la
+
+omjal_la_SOURCES = omjal.c
+omjal_la_CPPFLAGS =  $(RSRT_CFLAGS) $(PTHREADS_CFLAGS) -I/include
+omjal_la_LDFLAGS = -module -avoid-version -L/usr/lib -export-dynamic
+omjal_la_LIBADD = -ljal-producer -ljal-common
+
+EXTRA_DIST = 
+# CPPFLAGS=-I/include
+# LDFLAGS=-L/lib
--- /dev/null
+++ b/plugins/omjal/Makefile.in
@@ -0,0 +1,737 @@
+# Makefile.in generated by automake 1.15 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
+am__make_running_with_option = \
+  case $${target_option-} in \
+      ?) ;; \
+      *) echo "am__make_running_with_option: internal error: invalid" \
+              "target option '$${target_option-}' specified" >&2; \
+         exit 1;; \
+  esac; \
+  has_opt=no; \
+  sane_makeflags=$$MAKEFLAGS; \
+  if $(am__is_gnu_make); then \
+    sane_makeflags=$$MFLAGS; \
+  else \
+    case $$MAKEFLAGS in \
+      *\\[\ \	]*) \
+        bs=\\; \
+        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
+          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
+    esac; \
+  fi; \
+  skip_next=no; \
+  strip_trailopt () \
+  { \
+    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
+  }; \
+  for flg in $$sane_makeflags; do \
+    test $$skip_next = yes && { skip_next=no; continue; }; \
+    case $$flg in \
+      *=*|--*) continue;; \
+        -*I) strip_trailopt 'I'; skip_next=yes;; \
+      -*I?*) strip_trailopt 'I';; \
+        -*O) strip_trailopt 'O'; skip_next=yes;; \
+      -*O?*) strip_trailopt 'O';; \
+        -*l) strip_trailopt 'l'; skip_next=yes;; \
+      -*l?*) strip_trailopt 'l';; \
+      -[dEDm]) skip_next=yes;; \
+      -[JT]) skip_next=yes;; \
+    esac; \
+    case $$flg in \
+      *$$target_option*) has_opt=yes; break;; \
+    esac; \
+  done; \
+  test $$has_opt = yes
+am__make_dryrun = (target_option=n; $(am__make_running_with_option))
+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+subdir = plugins/omjal
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__uninstall_files_from_dir = { \
+  test -z "$$files" \
+    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
+    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
+         $(am__cd) "$$dir" && rm -f $$files; }; \
+  }
+am__installdirs = "$(DESTDIR)$(pkglibdir)"
+LTLIBRARIES = $(pkglib_LTLIBRARIES)
+omjal_la_DEPENDENCIES =
+am_omjal_la_OBJECTS = omjal_la-omjal.lo
+omjal_la_OBJECTS = $(am_omjal_la_OBJECTS)
+AM_V_lt = $(am__v_lt_@AM_V@)
+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
+am__v_lt_0 = --silent
+am__v_lt_1 = 
+omjal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(omjal_la_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_P = $(am__v_P_@AM_V@)
+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
+am__v_P_0 = false
+am__v_P_1 = :
+AM_V_GEN = $(am__v_GEN_@AM_V@)
+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
+am__v_GEN_0 = @echo "  GEN     " $@;
+am__v_GEN_1 = 
+AM_V_at = $(am__v_at_@AM_V@)
+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
+am__v_at_0 = @
+am__v_at_1 = 
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+AM_V_CC = $(am__v_CC_@AM_V@)
+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
+am__v_CC_0 = @echo "  CC      " $@;
+am__v_CC_1 = 
+CCLD = $(CC)
+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_CCLD = $(am__v_CCLD_@AM_V@)
+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
+am__v_CCLD_0 = @echo "  CCLD    " $@;
+am__v_CCLD_1 = 
+SOURCES = $(omjal_la_SOURCES)
+DIST_SOURCES = $(omjal_la_SOURCES)
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
+# Read a list of newline-separated strings from the standard input,
+# and print each of them once, without duplicates.  Input order is
+# *not* preserved.
+am__uniquify_input = $(AWK) '\
+  BEGIN { nonempty = 0; } \
+  { items[$$0] = 1; nonempty = 1; } \
+  END { if (nonempty) { for (i in items) print i; }; } \
+'
+# Make sure the list of sources is unique.  This is necessary because,
+# e.g., the same source file might be shared among _SOURCES variables
+# for different programs/libraries.
+am__define_uniq_tagged_files = \
+  list='$(am__tagged_files)'; \
+  unique=`for i in $$list; do \
+    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+  done | $(am__uniquify_input)`
+ETAGS = etags
+CTAGS = ctags
+am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp README
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CURL_CFLAGS = @CURL_CFLAGS@
+CURL_LIBS = @CURL_LIBS@
+CYGPATH_W = @CYGPATH_W@
+CZMQ_CFLAGS = @CZMQ_CFLAGS@
+CZMQ_LIBS = @CZMQ_LIBS@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DLLTOOL = @DLLTOOL@
+DL_LIBS = @DL_LIBS@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GLIB_CFLAGS = @GLIB_CFLAGS@
+GLIB_LIBS = @GLIB_LIBS@
+GNUTLS_CFLAGS = @GNUTLS_CFLAGS@
+GNUTLS_LIBS = @GNUTLS_LIBS@
+GREP = @GREP@
+GSS_LIBS = @GSS_LIBS@
+GT_KSI_CFLAGS = @GT_KSI_CFLAGS@
+GT_KSI_LIBS = @GT_KSI_LIBS@
+GUARDTIME_CFLAGS = @GUARDTIME_CFLAGS@
+GUARDTIME_LIBS = @GUARDTIME_LIBS@
+HIREDIS_CFLAGS = @HIREDIS_CFLAGS@
+HIREDIS_LIBS = @HIREDIS_LIBS@
+IMUDP_LIBS = @IMUDP_LIBS@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+JSON_C_CFLAGS = @JSON_C_CFLAGS@
+JSON_C_LIBS = @JSON_C_LIBS@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LEX = @LEX@
+LEXLIB = @LEXLIB@
+LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
+LIBDBI_CFLAGS = @LIBDBI_CFLAGS@
+LIBDBI_LIBS = @LIBDBI_LIBS@
+LIBESTR_CFLAGS = @LIBESTR_CFLAGS@
+LIBESTR_LIBS = @LIBESTR_LIBS@
+LIBGCRYPT_CFLAGS = @LIBGCRYPT_CFLAGS@
+LIBGCRYPT_LIBS = @LIBGCRYPT_LIBS@
+LIBLOGGING_CFLAGS = @LIBLOGGING_CFLAGS@
+LIBLOGGING_LIBS = @LIBLOGGING_LIBS@
+LIBLOGGING_STDLOG_CFLAGS = @LIBLOGGING_STDLOG_CFLAGS@
+LIBLOGGING_STDLOG_LIBS = @LIBLOGGING_STDLOG_LIBS@
+LIBLOGNORM_CFLAGS = @LIBLOGNORM_CFLAGS@
+LIBLOGNORM_LIBS = @LIBLOGNORM_LIBS@
+LIBM = @LIBM@
+LIBMONGO_CLIENT_CFLAGS = @LIBMONGO_CLIENT_CFLAGS@
+LIBMONGO_CLIENT_LIBS = @LIBMONGO_CLIENT_LIBS@
+LIBOBJS = @LIBOBJS@
+LIBRDKAFKA_CFLAGS = @LIBRDKAFKA_CFLAGS@
+LIBRDKAFKA_LIBS = @LIBRDKAFKA_LIBS@
+LIBS = @LIBS@
+LIBSYSTEMD_JOURNAL_CFLAGS = @LIBSYSTEMD_JOURNAL_CFLAGS@
+LIBSYSTEMD_JOURNAL_LIBS = @LIBSYSTEMD_JOURNAL_LIBS@
+LIBTOOL = @LIBTOOL@
+LIBUUID_CFLAGS = @LIBUUID_CFLAGS@
+LIBUUID_LIBS = @LIBUUID_LIBS@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
+MAKEINFO = @MAKEINFO@
+MANIFEST_TOOL = @MANIFEST_TOOL@
+MKDIR_P = @MKDIR_P@
+MYSQL_CFLAGS = @MYSQL_CFLAGS@
+MYSQL_CONFIG = @MYSQL_CONFIG@
+MYSQL_LIBS = @MYSQL_LIBS@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OPENSSL_CFLAGS = @OPENSSL_CFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PGSQL_CFLAGS = @PGSQL_CFLAGS@
+PGSQL_LIBS = @PGSQL_LIBS@
+PG_CONFIG = @PG_CONFIG@
+PKG_CONFIG = @PKG_CONFIG@
+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
+PROTON_CFLAGS = @PROTON_CFLAGS@
+PROTON_LIBS = @PROTON_LIBS@
+PTHREADS_CFLAGS = @PTHREADS_CFLAGS@
+PTHREADS_LIBS = @PTHREADS_LIBS@
+RABBITMQ_CFLAGS = @RABBITMQ_CFLAGS@
+RABBITMQ_LIBS = @RABBITMQ_LIBS@
+RANLIB = @RANLIB@
+READLINK = @READLINK@
+RELP_CFLAGS = @RELP_CFLAGS@
+RELP_LIBS = @RELP_LIBS@
+RSRT_CFLAGS = @RSRT_CFLAGS@
+RSRT_CFLAGS1 = @RSRT_CFLAGS1@
+RSRT_LIBS = @RSRT_LIBS@
+RSRT_LIBS1 = @RSRT_LIBS1@
+RST2MAN = @RST2MAN@
+RT_LIBS = @RT_LIBS@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+SNMP_CFLAGS = @SNMP_CFLAGS@
+SNMP_LIBS = @SNMP_LIBS@
+SOL_LIBS = @SOL_LIBS@
+STRIP = @STRIP@
+UDPSPOOF_CFLAGS = @UDPSPOOF_CFLAGS@
+UDPSPOOF_LIBS = @UDPSPOOF_LIBS@
+VALGRIND = @VALGRIND@
+VERSION = @VERSION@
+WGET = @WGET@
+YACC = @YACC@
+YACC_FOUND = @YACC_FOUND@
+YFLAGS = @YFLAGS@
+ZLIB_CFLAGS = @ZLIB_CFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_AR = @ac_ct_AR@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+moddirs = @moddirs@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+systemdsystemunitdir = @systemdsystemunitdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+pkglib_LTLIBRARIES = omjal.la
+omjal_la_SOURCES = omjal.c
+omjal_la_CPPFLAGS = $(RSRT_CFLAGS) $(PTHREADS_CFLAGS) -I/include
+omjal_la_LDFLAGS = -module -avoid-version -L/usr/lib -export-dynamic
+omjal_la_LIBADD = -ljal-producer -ljal-common
+EXTRA_DIST = 
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu plugins/omjal/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu plugins/omjal/Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2="$$list2 $$p"; \
+	  else :; fi; \
+	done; \
+	test -z "$$list2" || { \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
+	}
+
+uninstall-pkglibLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
+	done
+
+clean-pkglibLTLIBRARIES:
+	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
+	@list='$(pkglib_LTLIBRARIES)'; \
+	locs=`for p in $$list; do echo $$p; done | \
+	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
+	      sort -u`; \
+	test -z "$$locs" || { \
+	  echo rm -f $${locs}; \
+	  rm -f $${locs}; \
+	}
+
+omjal.la: $(omjal_la_OBJECTS) $(omjal_la_DEPENDENCIES) $(EXTRA_omjal_la_DEPENDENCIES) 
+	$(AM_V_CCLD)$(omjal_la_LINK) -rpath $(pkglibdir) $(omjal_la_OBJECTS) $(omjal_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/omjal_la-omjal.Plo@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
+@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
+
+omjal_la-omjal.lo: omjal.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omjal_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT omjal_la-omjal.lo -MD -MP -MF $(DEPDIR)/omjal_la-omjal.Tpo -c -o omjal_la-omjal.lo `test -f 'omjal.c' || echo '$(srcdir)/'`omjal.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/omjal_la-omjal.Tpo $(DEPDIR)/omjal_la-omjal.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='omjal.c' object='omjal_la-omjal.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omjal_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o omjal_la-omjal.lo `test -f 'omjal.c' || echo '$(srcdir)/'`omjal.c
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(am__tagged_files)
+	$(am__define_uniq_tagged_files); mkid -fID $$unique
+tags: tags-am
+TAGS: tags
+
+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	set x; \
+	here=`pwd`; \
+	$(am__define_uniq_tagged_files); \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: ctags-am
+
+CTAGS: ctags
+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	$(am__define_uniq_tagged_files); \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+cscopelist: cscopelist-am
+
+cscopelist-am: $(am__tagged_files)
+	list='$(am__tagged_files)'; \
+	case "$(srcdir)" in \
+	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
+	  *) sdir=$(subdir)/$(srcdir) ;; \
+	esac; \
+	for i in $$list; do \
+	  if test -f "$$i"; then \
+	    echo "$(subdir)/$$i"; \
+	  else \
+	    echo "$$sdir/$$i"; \
+	  fi; \
+	done >> $(top_builddir)/cscope.files
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+	for dir in "$(DESTDIR)$(pkglibdir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	if test -z '$(STRIP)'; then \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	      install; \
+	else \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
+	fi
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-pkglibLTLIBRARIES \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am: install-pkglibLTLIBRARIES
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-pkglibLTLIBRARIES
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
+	clean-libtool clean-pkglibLTLIBRARIES cscopelist-am ctags \
+	ctags-am distclean distclean-compile distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-dvi install-dvi-am install-exec \
+	install-exec-am install-html install-html-am install-info \
+	install-info-am install-man install-pdf install-pdf-am \
+	install-pkglibLTLIBRARIES install-ps install-ps-am \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
+	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
+	uninstall-pkglibLTLIBRARIES
+
+.PRECIOUS: Makefile
+
+# CPPFLAGS=-I/include
+# LDFLAGS=-L/lib
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- /dev/null
+++ b/plugins/omjal/README
@@ -0,0 +1,97 @@
+README for omjal.c
+
+In order to use this plugin appropriately, you must have all of the files specified in the "Files Involved" section.
+
+Files Involved:
+	rsyslogd/plugins/omjal/
+		omjal.c
+		Makefile.am
+
+	rsyslogd/
+		rsyslog.conf
+		configure.ac
+		Makefile.am
+		Makefile.in
+
+Quick Check:
+	Make sure that the files listed above exist.
+	Do a search on the files for "omjal".
+		If "omjal" is present, you are good to go!
+
+Current Module Behavior:
+	If the version of rsyslog present does not support Array Passing, 
+	the module will disable itself (disabling lasts until rsyslog 
+	is restarted).
+
+	If the module fails to initialize the JALP library, the 
+	module will disable itself.
+
+	If the module fails to send the log message, the module continues 
+	operating as if nothing bad has happened.
+
+	If the Socket and/or Schemas directories are not specified, 
+	the module will pass NULL to the JALP code.  This results in 
+	the JALP defaults being used.
+
+	Module assumes that the syslog message passed to it is using the 
+	logJAL template.
+		Checks should probably be added to ensure that the 
+		number of parameters received match the number expected 
+		to avoid a crash.
+
+		The output module currently requires 9 parameters, but it 
+		does not check that 9 were received before processing.
+
+Building rsyslogd:
+	From the rsyslogd directory: 
+		./configure --enable-omjal; make; make install;
+
+	Copy rsyslog.conf to /etc/ or edit the existing rsyslog.conf to contain 
+	information in the "Configuring rsyslogd for omjal plugin" section.
+
+Running rsyslogd in debug mode:
+	From www.rsyslog.com
+
+	Verify that rsyslogd as a daemon is stopped (ps -ef|grep rsyslogd)
+	Verify you have a console session with root permissions.
+	Run rsyslogd interactively: 
+		usr/local/sbin/rsyslogd <your options> -dn > logFile.
+		Ex. usr/local/sbin/rsyslogd -c4 -dn > out.txt
+	Press CTRL-C when you have sufficient data.
+	When done, re-enable (and start) the original background daemon.
+
+Configuring rsyslogd for omjal plugin:
+	Change rsyslog.conf to include the following:
+
+# rsyslog v3: load output modules
+# JALoP
+#
+# Load the JAL module
+#
+$ModLoad omjal    # calls JAL for rsyslog pass through to JALoP
+template(name="logJAL" type="list" option.json="on") {
+  constant(value="{")
+  constant(value="\",\"facility\":\"")
+  property(name="syslogfacility")
+  constant(value="\",\"severity\":\"")
+  property(name="syslogseverity")
+  constant(value="\",\"timestamp\":\"")
+  property(name="timestamp")
+  constant(value="\",\"hostname\":\"")
+  property(name="hostname")
+  constant(value="\",\"app-name\":\"")
+  property(name="app-name")
+  constant(value="\",\"procid\":\"")
+  property(name="procid")
+  constant(value="\",\"msgid\":\"")
+  property(name="msgid")
+  constant(value="\",\"structured-data\":\"")
+  property(name="structured-data")
+  constant(value="\",\"msg\":\"")
+  property(name="msg")
+  constant(value="\"}")
+}
+$ActionOmjalJsonInterface on
+$ActionOmjalSocket /var/run/jal/jalop.sock
+$ActionOmjalSchemas /usr/share/jalop-v1.0/schemas/
+*.* :omjal:;logJAL
--- /dev/null
+++ b/plugins/omjal/omjal.c
@@ -0,0 +1,529 @@
+/* omjal.c
+ * sends all output to JAL Producer.
+ *
+ * NOTE: read comments in module-template.h for more specifics!
+ *
+ * File begun on 2011-9-27 by Tresys Technology
+ *
+ * Copyright 2009 Rainer Gerhards and Adiscon GmbH.
+ *
+ * This file is part of rsyslog.
+ *
+ * Rsyslog is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * Rsyslog is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with Rsyslog.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ * A copy of the GPL can be found in the file "COPYING" in this distribution.
+ */
+#include "config.h"
+#include "rsyslog.h"
+#include <stdio.h>
+#include <stdarg.h>
+#include <stdlib.h>
+#include <string.h>
+#include <assert.h>
+#include <signal.h>
+#include <errno.h>
+#include <unistd.h>
+#include "conf.h"
+#include "syslogd-types.h"
+#include "srUtils.h"
+#include "template.h"
+#include "module-template.h"
+#include "errmsg.h"
+#include "cfsysline.h"
+
+#include <jalop/jalp_context.h>
+#include <jalop/jalp_logger.h>
+#include <jalop/jalp_app_metadata.h>
+#include <jalop/jal_status.h>
+
+MODULE_TYPE_OUTPUT
+MODULE_TYPE_NOKEEP
+MODULE_CNFNAME("omjal")
+
+/* config variables */
+static char *socketPath = "/var/run/jal/jalop.sock";
+static char *schemas = "/usr/share/jalop-v1.0/schemas/";
+static char *keyPath = NULL;
+static char *certPath = NULL;
+
+static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal);
+
+/* static data */
+
+/* internal structures
+ */
+DEF_OMOD_STATIC_DATA
+
+/* config variables */
+
+typedef struct _instanceData {
+	int bUseJsonInterface;		/* uses action use json instead of string template interface? */
+	jalp_context *ctx;	/* JAP context */
+} instanceData;
+
+typedef struct wrkrInstanceData {
+	instanceData *pData;
+} wrkrInstanceData_t;
+
+typedef struct configSettings_s {
+	int bUseJsonInterface;		/* shall action use json instead of string template interface? */
+} configSettings_t;
+static configSettings_t cs;
+
+/* tables for interfacing with the v6 config system */
+/* action (instance) parameters */
+static struct cnfparamdescr actpdescr[] = {
+};
+static struct cnfparamblk actpblk =
+	{ CNFPARAMBLK_VERSION,
+	  sizeof(actpdescr)/sizeof(struct cnfparamdescr),
+	  actpdescr
+	};
+
+struct modConfData_s {
+	rsconf_t *pConf;	/* our overall config object */
+};
+
+static modConfData_t *loadModConf = NULL;/* modConf ptr to use for the current load process */
+static modConfData_t *runModConf = NULL;/* modConf ptr to use for the current exec process */
+
+BEGINinitConfVars		/* (re)set config variables to default values */
+CODESTARTinitConfVars
+	resetConfigVariables(NULL, NULL);
+ENDinitConfVars
+
+BEGINcreateInstance
+CODESTARTcreateInstance
+ENDcreateInstance
+
+
+BEGINcreateWrkrInstance
+CODESTARTcreateWrkrInstance
+ENDcreateWrkrInstance
+
+static int context_init(instanceData *pData)
+{
+	int rc = 0;
+
+	// Passing NULL for socketPath and schemas to jalp_context_init is valid
+	//  and it will initialize them to default values.
+	if (!socketPath )
+	{
+		dbgprintf("omjal.c - SOCKETPATH was not specified in rsyslog.conf.  Using default!\n");
+	}
+
+	if (!schemas)
+	{
+		dbgprintf("omjal.c - SCHEMAS was not specified in rsyslog.conf.  Using default!\n");
+	}
+
+	dbgprintf("omjal.c - CONTEXT INIT\tSOCKETPATH:\t%s\tSCHEMAS:\t%s\n",socketPath,schemas);
+
+	rc = jalp_context_init(pData->ctx, socketPath, NULL, "rsyslogd", schemas);
+
+	dbgprintf("omjal.c - JALP context_init RETURN CODE=%d\n",rc);
+	if (rc != JAL_OK)
+		return rc;
+
+	if (keyPath != NULL) {
+		rc = jalp_context_load_pem_rsa(pData->ctx, keyPath, NULL);
+		if (rc != JAL_OK)
+			return rc;
+	}
+
+	if (certPath != NULL) {
+		rc = jalp_context_load_pem_cert(pData->ctx, certPath);
+	}
+
+	return rc;
+}
+
+static char *omjal_strdup(const char *pStr)
+{
+	if (pStr == NULL){
+		return NULL;
+	}
+	return strdup(pStr);
+}
+
+static struct jalp_syslog_metadata *getSyslogMetaData(struct json_object* json)
+{
+	struct jalp_syslog_metadata *log_data = NULL;
+	const char* key;
+	const char* val;
+	const size_t argc = json_object_object_length(json);
+
+	if (!json){
+		dbgprintf("omjal.c - Failure creating jalp_syslog_metadata, json passed into module was NULL!\n");
+		goto out;
+	}
+
+	log_data = jalp_syslog_metadata_create();
+	if (!log_data) {
+		dbgprintf("omjal.c - Failure creating JALP syslog metadata\n");
+		goto out;
+	}
+
+	struct json_object_iterator it = json_object_iter_begin(json);
+	for(size_t i = 0 ; i < argc ; ++i) {
+		key = json_object_iter_peek_name(&it);
+		val = json_object_get_string(json_object_iter_peek_value(&it));
+		
+		if(!strcmp(key, "syslogfacility"))
+			log_data->facility = atoi(val);
+		else if(!strcmp(key, "syslogseverity"))
+			log_data->severity = atoi(val);
+		else if(!strcmp(key, "msgid"))	
+			log_data->message_id = omjal_strdup(val);
+		else if(!strcmp(key, "msg"))
+			log_data->entry = omjal_strdup(val);
+		json_object_iter_next(&it);
+
+	}
+	log_data->timestamp = NULL; // let producer generate timestamp
+	log_data->sd_head = NULL;
+
+	dbgprintf("omjal.c - log_data fields modified!!\n");
+	dbgprintf("omjal.c - LOG_DATA FIELDS:\n");
+	dbgprintf("omjal.c - Facility = %d\tSeverity = %d\tTimestamp = %s\n", log_data->facility, log_data->severity, log_data->timestamp);
+	dbgprintf("omjal.c - MsgID = %s\tEntry = %s\n", log_data->message_id, log_data->entry);
+	dbgprintf("omjal.c - DISPLAYED log_data Contents\n");
+
+out:
+	return log_data;
+}
+
+static struct jalp_app_metadata *getAppData(struct json_object* json)
+{
+	struct jalp_app_metadata *app_data = NULL;
+	struct jalp_syslog_metadata *log_data = NULL;
+
+	app_data = jalp_app_metadata_create();
+	if (!app_data) {
+		dbgprintf("omjal.c - failure creating JALP application metadata\n");
+		goto out;
+	}
+
+	dbgprintf("omjal.c - created app metadata!\n");
+
+	app_data->type = JALP_METADATA_SYSLOG;
+	app_data->event_id = NULL;
+
+	log_data = getSyslogMetaData(json);
+
+	if (!log_data) {
+		dbgprintf("omjal.c - failure creating JALP syslog metadata\n");
+		goto out;
+	}
+	
+	dbgprintf("omjal.c - created syslog metadata!\n");
+
+	app_data->sys = log_data;
+
+	dbgprintf("omjal.c - set app_data->sys TO log_data!\n");
+
+	log_data = NULL;
+
+	dbgprintf("omjal.c - log_data = NULL!\n");
+	
+out:
+	return app_data;
+}
+
+static int sendToJALoP(struct json_object* json, instanceData *pData)
+{
+	dbgprintf("omjal.c - pDATA sendToJALoP START:\tSOCKETPATH:\t%s\tSCHEMAS:\t%s\n",socketPath,schemas);
+
+	int rc = 0;
+	const char* msg = NULL;
+
+	if (!json || !pData){
+		rc = JAL_E_INVAL;
+		goto out;
+	}
+
+	struct jalp_app_metadata *app_data = NULL;
+
+	/* see if we are ready to proceed */
+	if(!pData->ctx) {
+		dbgprintf("omjal.c - JALP context not created!\n");
+
+		pData->ctx = jalp_context_create();
+
+		if (!pData->ctx) {
+			dbgprintf("omjal.c - JALP context creation failure!\n");
+			goto out;
+		}
+
+		dbgprintf("omjal.c - JALP context created!\n");
+		
+		rc = context_init(pData);
+
+		if (rc != JAL_OK){
+			dbgprintf("omjal.c - failure initializing JALP context, rc: %d", rc);
+			jalp_context_destroy(&pData->ctx);
+			pData->ctx = NULL;
+			goto out;
+		}
+		dbgprintf("omjal.c - JALP context initialized!\n");
+	}
+	else {
+		dbgprintf("omjal.c - JALP context already exists!\n");
+	}
+	
+	app_data = getAppData(json);
+
+	if (!app_data){
+		dbgprintf("omjal.c - Failed to create app_data!\n");
+	}
+
+	dbgprintf("omjal.c - AFTER getAppData\n");
+
+	dbgprintf("omjal.c - pDATA BEFORE jalp_log call:\tSOCKETPATH:\t%s\tSCHEMAS:\t%s\n",socketPath,schemas);
+
+	msg = fjson_object_to_json_string(json);
+	dbgprintf("MESSAGE data is %s\n",msg);
+	rc = jalp_log(pData->ctx, app_data, msg, strlen(msg));
+
+	if (rc != JAL_OK){
+		dbgprintf("omjal.c - JALP failed to log!\n");
+		goto out;
+	}
+	
+	dbgprintf("omjal.c - JALP Logged!\n");
+
+out:
+	jalp_app_metadata_destroy(&app_data);
+	return rc;
+}
+
+
+BEGINbeginCnfLoad
+CODESTARTbeginCnfLoad
+	loadModConf = pModConf;
+	pModConf->pConf = pConf;
+ENDbeginCnfLoad
+
+
+BEGINendCnfLoad
+CODESTARTendCnfLoad
+	loadModConf = NULL; /* done loading */
+ENDendCnfLoad
+
+BEGINcheckCnf
+CODESTARTcheckCnf
+ENDcheckCnf
+
+BEGINactivateCnf
+CODESTARTactivateCnf
+	runModConf = pModConf;
+ENDactivateCnf
+
+BEGINfreeCnf
+CODESTARTfreeCnf
+ENDfreeCnf
+
+
+BEGINisCompatibleWithFeature
+CODESTARTisCompatibleWithFeature
+	if(eFeat == sFEATURERepeatedMsgReduction)
+		iRet = RS_RET_OK;
+ENDisCompatibleWithFeature
+
+
+BEGINfreeInstance
+CODESTARTfreeInstance
+	// Destroy the Context!
+	jalp_context_destroy(&pData->ctx);
+	dbgprintf("omjal.c - INSTANCE DATA FREED!\n");
+ENDfreeInstance
+
+
+BEGINfreeWrkrInstance
+CODESTARTfreeWrkrInstance
+ENDfreeWrkrInstance
+
+
+BEGINdbgPrintInstInfo
+CODESTARTdbgPrintInstInfo
+	dbgprintf("omjal\n");
+ENDdbgPrintInstInfo
+
+
+BEGINtryResume
+CODESTARTtryResume
+ENDtryResume
+
+
+BEGINdoAction
+	int r;
+	struct json_object* json;
+CODESTARTdoAction
+dbgprintf("omjal: in doAction\n");
+	if(pWrkrData->pData->bUseJsonInterface) {
+dbgprintf("omjal: in JsonInterface\n");
+		json = (struct json_object*) ((void**)pMsgData)[0];
+
+		r = sendToJALoP(json, pWrkrData->pData);
+		if (r != JAL_OK){
+			dbgprintf("omjal.c - Failed to send to JALP! Error Code: %d\n", r);
+			dbgprintf("omjal.c - Module disabling!\n");
+			iRet = RS_RET_DISABLE_ACTION;
+		}
+		else {
+			iRet = RS_RET_OK;
+		}
+
+	} else {
+dbgprintf("omjal: in else\n");
+		dbgprintf("omjal.c - Rsyslog Core does not support json passing.\n");
+		dbgprintf("omjal.c - Module disabling!\n");
+		iRet = RS_RET_DISABLE_ACTION;
+	}
+ENDdoAction
+
+static void
+setInstParamDefaults(instanceData *pData)
+{
+	pData->bUseJsonInterface = 1;
+}
+
+
+BEGINnewActInst
+	struct cnfparamvals *pvals;
+	int i;
+	int bDestructPValsOnExit;
+CODESTARTnewActInst
+	DBGPRINTF("newActInst (omjal)\n");
+
+	bDestructPValsOnExit = 0;
+	pvals = nvlstGetParams(lst, &actpblk, NULL);
+	if(pvals == NULL) {
+		ABORT_FINALIZE(RS_RET_MISSING_CNFPARAMS);
+	}
+	bDestructPValsOnExit = 1;
+
+	if(Debug) {
+		dbgprintf("action param blk in omjal:\n");
+		cnfparamsPrint(&actpblk, pvals);
+	}
+
+	CHKiRet(createInstance(&pData));
+	setInstParamDefaults(pData);
+
+	for(i = 0 ; i < actpblk.nParams ; ++i) {
+		if(!pvals[i].bUsed) {
+			continue;
+		} else {
+			DBGPRINTF("omjal: program error, non-handled "
+			  "param '%s'\n", actpblk.descr[i].name);
+		}
+	}
+
+
+	CODE_STD_STRING_REQUESTnewActInst(1)
+CODE_STD_FINALIZERnewActInst
+	if(bDestructPValsOnExit)
+		cnfparamvalsDestruct(pvals, &actpblk);
+ENDnewActInst
+
+
+
+BEGINparseSelectorAct
+	int iTplOpts;
+CODESTARTparseSelectorAct
+CODE_STD_STRING_REQUESTparseSelectorAct(1)
+	/* first check if this config line is actually for us */
+	if(strncmp((char*) p, ":omjal:", sizeof(":omjal:") - 1)) {
+		ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);
+	}
+
+	/* ok, if we reach this point, we have something for us */
+	p += sizeof(":omjal:") - 1; /* eat indicator sequence  (-1 because of '\0'!) */
+	CHKiRet(createInstance(&pData));
+
+	/* check if a non-standard template is to be applied */
+	if(*(p-1) == ';')
+		--p;
+	iTplOpts = (cs.bUseJsonInterface == 0) ? 0 : OMSR_TPL_AS_JSON;
+	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, iTplOpts, (uchar*) "RSYSLOG_FileFormat"));
+	pData->bUseJsonInterface = cs.bUseJsonInterface;
+CODE_STD_FINALIZERparseSelectorAct
+ENDparseSelectorAct
+
+
+BEGINmodExit
+CODESTARTmodExit
+	jalp_shutdown(); // Release JALP resources
+
+	dbgprintf("omjal.c - !!!!!!!!!!!!!!!!!!!!!!!\n");
+	dbgprintf("omjal.c - !! JALP_SHUTDOWN!\n");
+	dbgprintf("omjal.c - !!!!!!!!!!!!!!!!!!!!!!!\n");
+ENDmodExit
+
+
+BEGINqueryEtryPt
+CODESTARTqueryEtryPt
+CODEqueryEtryPt_STD_OMOD_QUERIES
+CODEqueryEtryPt_STD_OMOD8_QUERIES
+CODEqueryEtryPt_STD_CONF2_CNFNAME_QUERIES
+CODEqueryEtryPt_STD_CONF2_QUERIES
+CODEqueryEtryPt_STD_CONF2_OMOD_QUERIES
+ENDqueryEtryPt
+
+
+
+/* Reset config variables for this module to default values.
+ */
+static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)
+{
+	DEFiRet;
+	cs.bUseJsonInterface = 1;
+	RETiRet;
+}
+
+
+BEGINmodInit()
+	rsRetVal localRet;
+	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);
+	unsigned long opts;
+	int bJsonPassingSupported;		/* does core support template passing as an json? */
+CODESTARTmodInit
+INITLegCnfVars
+	*ipIFVersProvided = CURR_MOD_IF_VERSION; /* we only support the current interface specification */
+CODEmodInit_QueryRegCFSLineHdlr
+	/* check if the rsyslog core supports parameter passing code */
+	bJsonPassingSupported = 0;
+	localRet = pHostQueryEtryPt((uchar*)"OMSRgetSupportedTplOpts", &pomsrGetSupportedTplOpts);
+	if(localRet == RS_RET_OK) {
+		/* found entry point, so let's see if core supports json passing */
+		CHKiRet((*pomsrGetSupportedTplOpts)(&opts));
+		if(opts & OMSR_TPL_AS_JSON)
+			bJsonPassingSupported = 1;
+	} else if(localRet != RS_RET_ENTRY_POINT_NOT_FOUND) {
+		ABORT_FINALIZE(localRet); /* Something else went wrong, what is not acceptable */
+	}
+	DBGPRINTF("omjal: json-passing is %ssupported by rsyslog core.\n", bJsonPassingSupported ? "" : "not ");
+
+	if(bJsonPassingSupported) {
+		/* enable config comand only if core supports it */
+		CHKiRet(omsdRegCFSLineHdlr((uchar *)"actionomjaljsoninterface", 0, eCmdHdlrBinary, NULL,
+			                   &cs.bUseJsonInterface, STD_LOADABLE_MODULE_ID));
+	}
+	CHKiRet(omsdRegCFSLineHdlr((uchar *)"resetconfigvariables", 1, eCmdHdlrCustomHandler,
+				    resetConfigVariables, NULL, STD_LOADABLE_MODULE_ID));
+ENDmodInit
+
+/* vi:set ai:
+ */
